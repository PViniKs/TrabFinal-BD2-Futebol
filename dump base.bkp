--
-- PostgreSQL database dump
--

-- Dumped from database version 16.2
-- Dumped by pg_dump version 16.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO postgres;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS '';


--
-- Name: addjogadornotime(integer, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.addjogadornotime(idjogadorsp integer, numerocamisasp integer, posicaosp character varying, idtimesp integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM Jogadores_Times WHERE idJogador = idJogadorSP) THEN
            INSERT INTO Jogadores_Times (idJogador, idTime) VALUES (idJogadorSP, idTimeSP);
            UPDATE Jogadores SET numeroCamisa = numeroCamisaSP, posicao = posicaoSP WHERE idPessoa = idJogadorSP;
        ELSE
            RAISE WARNING 'Erro ao inserir.'; 
            RAISE NOTICE 'Jogador % vinculado ao time %.', (SELECT nome FROM Jogadores WHERE idPessoa = idJogadorSP), (SELECT nomeTime from TIMES t JOIN Jogadores_Times jt ON t.idTime = jt.idTime WHERE jt.idJogador = idJogadorSP);
        END IF;
    END;
    $$;


ALTER FUNCTION public.addjogadornotime(idjogadorsp integer, numerocamisasp integer, posicaosp character varying, idtimesp integer) OWNER TO postgres;

--
-- Name: calcularidade(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calcularidade(idpessoafn integer) RETURNS TABLE(nome character varying, idade character varying)
    LANGUAGE plpgsql
    AS $$
    BEGIN
        RETURN QUERY
        SELECT
            Pessoas.nome,
            CONCAT(EXTRACT(YEAR FROM AGE(CURRENT_DATE, Pessoas.dataNascimento))::INTEGER, ' anos')::VARCHAR(10)
        FROM Pessoas WHERE idPessoa = idPessoaFN;
    END;
    $$;


ALTER FUNCTION public.calcularidade(idpessoafn integer) OWNER TO postgres;

--
-- Name: escjogadorreserva(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.escjogadorreserva(idjogadorsp integer, idescalacaosp integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF (SELECT COUNT(*) FROM Jogadores_Escalacoes WHERE idEscalacao = idEscalacaoSP AND titular = FALSE) < 11 THEN
            IF NOT EXISTS (SELECT 1 FROM Jogadores_Escalacoes WHERE idJogador = idJogadorSP AND idEscalacao = idEscalacaoSP) THEN
                INSERT INTO Jogadores_Escalacoes (idJogador, idEscalacao, titular) VALUES (idJogadorSP, idEscalacaoSP, FALSE);
            ELSE 
                RAISE WARNING 'Erro ao escalar jogador.';
                RAISE NOTICE 'Jogador % j  escalado.', (SELECT nome FROM Jogadores WHERE idPessoa = idJogadorSP);
            END IF;
        ELSE
            RAISE WARNING 'Erro ao escalar jogador.';
            RAISE NOTICE 'Escala‡Æo % j  possui 11 reservas.', idEscalacaoSP;
        END IF;
    END;
    $$;


ALTER FUNCTION public.escjogadorreserva(idjogadorsp integer, idescalacaosp integer) OWNER TO postgres;

--
-- Name: escjogadortitular(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.escjogadortitular(idjogadorsp integer, idescalacaosp integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF (SELECT COUNT(*) FROM Jogadores_Escalacoes WHERE idEscalacao = idEscalacaoSP AND titular = TRUE) < 11 THEN
            IF NOT EXISTS (SELECT 1 FROM Jogadores_Escalacoes WHERE idJogador = idJogadorSP AND idEscalacao = idEscalacaoSP) THEN
                INSERT INTO Jogadores_Escalacoes (idJogador, idEscalacao, titular) VALUES (idJogadorSP, idEscalacaoSP, TRUE);
            ELSE 
                RAISE WARNING 'Erro ao escalar jogador.';
                RAISE NOTICE 'Jogador % j  escalado.', (SELECT nome FROM Jogadores WHERE idPessoa = idJogadorSP);
            END IF;
        ELSE
            RAISE WARNING 'Erro ao escalar jogador.';
            RAISE NOTICE 'Escala‡Æo % j  possui 11 titulares.', idEscalacaoSP;
        END IF;
    END;
    $$;


ALTER FUNCTION public.escjogadortitular(idjogadorsp integer, idescalacaosp integer) OWNER TO postgres;

--
-- Name: getidade(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.getidade(idpessoafn integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
    DECLARE
        idade INTEGER;
    BEGIN
        SELECT
            EXTRACT(YEAR FROM AGE(CURRENT_DATE, Pessoas.dataNascimento))::INTEGER
        INTO idade
        FROM Pessoas WHERE idPessoa = idPessoaFN;
        RETURN idade;
    END;
    $$;


ALTER FUNCTION public.getidade(idpessoafn integer) OWNER TO postgres;

--
-- Name: log_operacoes(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_operacoes() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'INSERT') THEN
        INSERT INTO logs (operacao, tabela, usuario, descricao)
        VALUES ('INSERT', TG_TABLE_NAME, current_user, 'Inser‡Æo de um registro' || NEW);
    ELSIF (TG_OP = 'UPDATE') THEN
        INSERT INTO logs (operacao, tabela, usuario, descricao)
        VALUES ('UPDATE', TG_TABLE_NAME, current_user, 'Atualiza‡Æo de um registro' || NEW);
    ELSIF (TG_OP = 'DELETE') THEN
        INSERT INTO logs (operacao, tabela, usuario, descricao)
        VALUES ('DELETE', TG_TABLE_NAME, current_user, 'Remo‡Æo de um registro' || OLD);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.log_operacoes() OWNER TO postgres;

--
-- Name: qtdjogadores(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.qtdjogadores(idtimefn integer) RETURNS TABLE(nometime character varying, quantidade character varying)
    LANGUAGE plpgsql
    AS $$
    BEGIN
        RETURN QUERY
        SELECT
            Times.nomeTime,
            CONCAT(COUNT(Jogadores_Times.idJogador), ' jogadores')::VARCHAR(15)
        FROM Times JOIN Jogadores_Times ON Times.idTime = Jogadores_Times.idTime WHERE Times.idTime = idTimeFN GROUP BY Times.nomeTime;
    END;
    $$;


ALTER FUNCTION public.qtdjogadores(idtimefn integer) OWNER TO postgres;

--
-- Name: qtdpartidasjogador(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.qtdpartidasjogador(idjogadorfn integer) RETURNS TABLE(nome character varying, quantidade character varying)
    LANGUAGE plpgsql
    AS $$
    BEGIN
        RETURN QUERY
        SELECT
            Jogadores.nome,
            CONCAT(COUNT(Partidas.idPartida), ' partidas')::VARCHAR(15)
        FROM Jogadores JOIN Jogadores_Times ON Jogadores.idPessoa = Jogadores_Times.idJogador JOIN Partidas ON Jogadores_Times.idTime = Partidas.timeCasa OR Jogadores_Times.idTime = Partidas.timeVisitante WHERE Jogadores.idPessoa = idJogadorFN GROUP BY Jogadores.nome;
    END;
    $$;


ALTER FUNCTION public.qtdpartidasjogador(idjogadorfn integer) OWNER TO postgres;

--
-- Name: qtdpartidastime(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.qtdpartidastime(idtimefn integer) RETURNS TABLE(nometime character varying, quantidade character varying)
    LANGUAGE plpgsql
    AS $$
    BEGIN
        RETURN QUERY
        SELECT
            Times.nomeTime,
            CONCAT(COUNT(Partidas.idPartida), ' partidas')::VARCHAR(15)
        FROM Times JOIN Partidas ON Times.idTime = Partidas.timeCasa OR Times.idTime = Partidas.timeVisitante WHERE Times.idTime = idTimeFN GROUP BY Times.nomeTime;
    END;
    $$;


ALTER FUNCTION public.qtdpartidastime(idtimefn integer) OWNER TO postgres;

--
-- Name: removejogadordotime(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.removejogadordotime(idjogadorsp integer, idtimesp integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF EXISTS (SELECT 1 FROM Jogadores_Times WHERE idJogador = idJogadorSP AND idTime = idTimeSP) THEN
            DELETE FROM Jogadores_Times WHERE idJogador = idJogadorSP AND idTime = idTimeSP;
        ELSE
            RAISE WARNING 'Erro ao remover.';
            RAISE NOTICE 'Jogador % nÆo vinculado ao time %.', (SELECT nome FROM Jogadores WHERE idPessoa = idJogadorSP), (SELECT nomeTime from TIMES t JOIN Jogadores_Times jt ON t.idTime = jt.idTime WHERE jt.idJogador = idJogadorSP);
        END IF;
    END;
    $$;


ALTER FUNCTION public.removejogadordotime(idjogadorsp integer, idtimesp integer) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: escalacoes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.escalacoes (
    idescalacao integer NOT NULL,
    idtime integer NOT NULL,
    formacao character varying(10)
);


ALTER TABLE public.escalacoes OWNER TO postgres;

--
-- Name: escalacoes_idescalacao_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.escalacoes_idescalacao_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.escalacoes_idescalacao_seq OWNER TO postgres;

--
-- Name: escalacoes_idescalacao_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.escalacoes_idescalacao_seq OWNED BY public.escalacoes.idescalacao;


--
-- Name: escalacoes_idtime_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.escalacoes_idtime_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.escalacoes_idtime_seq OWNER TO postgres;

--
-- Name: escalacoes_idtime_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.escalacoes_idtime_seq OWNED BY public.escalacoes.idtime;


--
-- Name: pessoas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pessoas (
    idpessoa integer NOT NULL,
    datanascimento date,
    nome character varying(50),
    cpf character varying(11)
);


ALTER TABLE public.pessoas OWNER TO postgres;

--
-- Name: jogadores; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jogadores (
    numerocamisa integer DEFAULT '-1'::integer,
    posicao character varying(15) DEFAULT 'indefinida'::character varying
)
INHERITS (public.pessoas);


ALTER TABLE public.jogadores OWNER TO postgres;

--
-- Name: jogadores_escalacoes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jogadores_escalacoes (
    idjogador integer NOT NULL,
    idescalacao integer NOT NULL,
    titular boolean
);


ALTER TABLE public.jogadores_escalacoes OWNER TO postgres;

--
-- Name: jogadores_escalacoes_idescalacao_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.jogadores_escalacoes_idescalacao_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.jogadores_escalacoes_idescalacao_seq OWNER TO postgres;

--
-- Name: jogadores_escalacoes_idescalacao_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.jogadores_escalacoes_idescalacao_seq OWNED BY public.jogadores_escalacoes.idescalacao;


--
-- Name: jogadores_escalacoes_idjogador_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.jogadores_escalacoes_idjogador_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.jogadores_escalacoes_idjogador_seq OWNER TO postgres;

--
-- Name: jogadores_escalacoes_idjogador_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.jogadores_escalacoes_idjogador_seq OWNED BY public.jogadores_escalacoes.idjogador;


--
-- Name: jogadores_times; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jogadores_times (
    idjogador integer NOT NULL,
    idtime integer NOT NULL
);


ALTER TABLE public.jogadores_times OWNER TO postgres;

--
-- Name: jogadores_times_idjogador_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.jogadores_times_idjogador_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.jogadores_times_idjogador_seq OWNER TO postgres;

--
-- Name: jogadores_times_idjogador_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.jogadores_times_idjogador_seq OWNED BY public.jogadores_times.idjogador;


--
-- Name: jogadores_times_idtime_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.jogadores_times_idtime_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.jogadores_times_idtime_seq OWNER TO postgres;

--
-- Name: jogadores_times_idtime_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.jogadores_times_idtime_seq OWNED BY public.jogadores_times.idtime;


--
-- Name: logs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.logs (
    idlog integer NOT NULL,
    operacao character varying(10) NOT NULL,
    tabela character varying(50) NOT NULL,
    data timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    usuario character varying(50) NOT NULL,
    descricao text
);


ALTER TABLE public.logs OWNER TO postgres;

--
-- Name: logs_idlog_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.logs_idlog_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.logs_idlog_seq OWNER TO postgres;

--
-- Name: logs_idlog_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.logs_idlog_seq OWNED BY public.logs.idlog;


--
-- Name: partidas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.partidas (
    idpartida integer NOT NULL,
    timecasa integer NOT NULL,
    timevisitante integer NOT NULL,
    escalacaocasa integer NOT NULL,
    escalacaovisitante integer NOT NULL,
    golscasa integer DEFAULT 0,
    golsvisitante integer DEFAULT 0,
    data date,
    horario time without time zone,
    local character varying(20)
);


ALTER TABLE public.partidas OWNER TO postgres;

--
-- Name: partidas_escalacaocasa_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.partidas_escalacaocasa_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.partidas_escalacaocasa_seq OWNER TO postgres;

--
-- Name: partidas_escalacaocasa_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.partidas_escalacaocasa_seq OWNED BY public.partidas.escalacaocasa;


--
-- Name: partidas_escalacaovisitante_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.partidas_escalacaovisitante_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.partidas_escalacaovisitante_seq OWNER TO postgres;

--
-- Name: partidas_escalacaovisitante_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.partidas_escalacaovisitante_seq OWNED BY public.partidas.escalacaovisitante;


--
-- Name: partidas_idpartida_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.partidas_idpartida_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.partidas_idpartida_seq OWNER TO postgres;

--
-- Name: partidas_idpartida_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.partidas_idpartida_seq OWNED BY public.partidas.idpartida;


--
-- Name: partidas_timecasa_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.partidas_timecasa_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.partidas_timecasa_seq OWNER TO postgres;

--
-- Name: partidas_timecasa_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.partidas_timecasa_seq OWNED BY public.partidas.timecasa;


--
-- Name: partidas_timevisitante_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.partidas_timevisitante_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.partidas_timevisitante_seq OWNER TO postgres;

--
-- Name: partidas_timevisitante_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.partidas_timevisitante_seq OWNED BY public.partidas.timevisitante;


--
-- Name: pessoas_idpessoa_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.pessoas_idpessoa_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.pessoas_idpessoa_seq OWNER TO postgres;

--
-- Name: pessoas_idpessoa_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.pessoas_idpessoa_seq OWNED BY public.pessoas.idpessoa;


--
-- Name: times; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.times (
    idtime integer NOT NULL,
    nometime character varying(50),
    idtreinador integer NOT NULL
);


ALTER TABLE public.times OWNER TO postgres;

--
-- Name: times_idtime_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.times_idtime_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.times_idtime_seq OWNER TO postgres;

--
-- Name: times_idtime_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.times_idtime_seq OWNED BY public.times.idtime;


--
-- Name: times_idtreinador_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.times_idtreinador_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.times_idtreinador_seq OWNER TO postgres;

--
-- Name: times_idtreinador_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.times_idtreinador_seq OWNED BY public.times.idtreinador;


--
-- Name: treinadores; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.treinadores (
)
INHERITS (public.pessoas);


ALTER TABLE public.treinadores OWNER TO postgres;

--
-- Name: viewjogadores; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.viewjogadores AS
 SELECT jogadores.nome AS "Nome do Jogador",
    public.getidade(jogadores.idpessoa) AS "Idade",
    times.nometime AS "Time"
   FROM ((public.jogadores
     JOIN public.jogadores_times ON ((jogadores.idpessoa = jogadores_times.idjogador)))
     JOIN public.times ON ((jogadores_times.idtime = times.idtime)));


ALTER VIEW public.viewjogadores OWNER TO postgres;

--
-- Name: viewpartidas; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.viewpartidas AS
 SELECT partidas.data AS "Data",
    partidas.horario AS "Hor rio",
    partidas.local AS "Local",
    timecasa.nometime AS "Time da Casa",
    timevisitante.nometime AS "Time Visitante"
   FROM ((public.partidas
     JOIN public.times timecasa ON ((partidas.timecasa = timecasa.idtime)))
     JOIN public.times timevisitante ON ((partidas.timevisitante = timevisitante.idtime)));


ALTER VIEW public.viewpartidas OWNER TO postgres;

--
-- Name: viewpessoas; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.viewpessoas AS
 SELECT j.idpessoa AS "ID",
    j.nome AS "Nome",
    public.getidade(j.idpessoa) AS "Idade",
    'Jogador'::text AS "Tipo"
   FROM public.jogadores j
UNION
 SELECT t.idpessoa AS "ID",
    t.nome AS "Nome",
    public.getidade(t.idpessoa) AS "Idade",
    'Treinador'::text AS "Tipo"
   FROM public.treinadores t
  ORDER BY 4 DESC, 1;


ALTER VIEW public.viewpessoas OWNER TO postgres;

--
-- Name: escalacoes idescalacao; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.escalacoes ALTER COLUMN idescalacao SET DEFAULT nextval('public.escalacoes_idescalacao_seq'::regclass);


--
-- Name: escalacoes idtime; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.escalacoes ALTER COLUMN idtime SET DEFAULT nextval('public.escalacoes_idtime_seq'::regclass);


--
-- Name: jogadores idpessoa; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores ALTER COLUMN idpessoa SET DEFAULT nextval('public.pessoas_idpessoa_seq'::regclass);


--
-- Name: jogadores_escalacoes idjogador; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_escalacoes ALTER COLUMN idjogador SET DEFAULT nextval('public.jogadores_escalacoes_idjogador_seq'::regclass);


--
-- Name: jogadores_escalacoes idescalacao; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_escalacoes ALTER COLUMN idescalacao SET DEFAULT nextval('public.jogadores_escalacoes_idescalacao_seq'::regclass);


--
-- Name: jogadores_times idjogador; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_times ALTER COLUMN idjogador SET DEFAULT nextval('public.jogadores_times_idjogador_seq'::regclass);


--
-- Name: jogadores_times idtime; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_times ALTER COLUMN idtime SET DEFAULT nextval('public.jogadores_times_idtime_seq'::regclass);


--
-- Name: logs idlog; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.logs ALTER COLUMN idlog SET DEFAULT nextval('public.logs_idlog_seq'::regclass);


--
-- Name: partidas idpartida; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas ALTER COLUMN idpartida SET DEFAULT nextval('public.partidas_idpartida_seq'::regclass);


--
-- Name: partidas timecasa; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas ALTER COLUMN timecasa SET DEFAULT nextval('public.partidas_timecasa_seq'::regclass);


--
-- Name: partidas timevisitante; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas ALTER COLUMN timevisitante SET DEFAULT nextval('public.partidas_timevisitante_seq'::regclass);


--
-- Name: partidas escalacaocasa; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas ALTER COLUMN escalacaocasa SET DEFAULT nextval('public.partidas_escalacaocasa_seq'::regclass);


--
-- Name: partidas escalacaovisitante; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas ALTER COLUMN escalacaovisitante SET DEFAULT nextval('public.partidas_escalacaovisitante_seq'::regclass);


--
-- Name: pessoas idpessoa; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pessoas ALTER COLUMN idpessoa SET DEFAULT nextval('public.pessoas_idpessoa_seq'::regclass);


--
-- Name: times idtime; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.times ALTER COLUMN idtime SET DEFAULT nextval('public.times_idtime_seq'::regclass);


--
-- Name: times idtreinador; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.times ALTER COLUMN idtreinador SET DEFAULT nextval('public.times_idtreinador_seq'::regclass);


--
-- Name: treinadores idpessoa; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.treinadores ALTER COLUMN idpessoa SET DEFAULT nextval('public.pessoas_idpessoa_seq'::regclass);


--
-- Name: escalacoes escalacoes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.escalacoes
    ADD CONSTRAINT escalacoes_pkey PRIMARY KEY (idescalacao);


--
-- Name: jogadores_escalacoes jogadores_escalacoes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_escalacoes
    ADD CONSTRAINT jogadores_escalacoes_pkey PRIMARY KEY (idjogador);


--
-- Name: jogadores_times jogadores_times_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_times
    ADD CONSTRAINT jogadores_times_pkey PRIMARY KEY (idjogador);


--
-- Name: logs logs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.logs
    ADD CONSTRAINT logs_pkey PRIMARY KEY (idlog);


--
-- Name: partidas partidas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas
    ADD CONSTRAINT partidas_pkey PRIMARY KEY (idpartida);


--
-- Name: pessoas pessoas_cpf_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pessoas
    ADD CONSTRAINT pessoas_cpf_key UNIQUE (cpf);


--
-- Name: pessoas pessoas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pessoas
    ADD CONSTRAINT pessoas_pkey PRIMARY KEY (idpessoa);


--
-- Name: times times_idtreinador_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.times
    ADD CONSTRAINT times_idtreinador_key UNIQUE (idtreinador);


--
-- Name: times times_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.times
    ADD CONSTRAINT times_pkey PRIMARY KEY (idtime);


--
-- Name: jogadores uq_jogadores_cpf; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores
    ADD CONSTRAINT uq_jogadores_cpf UNIQUE (cpf);


--
-- Name: jogadores uq_jogadores_idpessoa; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores
    ADD CONSTRAINT uq_jogadores_idpessoa UNIQUE (idpessoa);


--
-- Name: treinadores uq_treinadores_cpf; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.treinadores
    ADD CONSTRAINT uq_treinadores_cpf UNIQUE (cpf);


--
-- Name: treinadores uq_treinadores_idpessoa; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.treinadores
    ADD CONSTRAINT uq_treinadores_idpessoa UNIQUE (idpessoa);


--
-- Name: escalacoes trg_log_escalacoes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_escalacoes AFTER INSERT OR DELETE OR UPDATE ON public.escalacoes FOR EACH ROW EXECUTE FUNCTION public.log_operacoes();


--
-- Name: jogadores trg_log_jogadores; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_jogadores AFTER INSERT OR DELETE OR UPDATE ON public.jogadores FOR EACH ROW EXECUTE FUNCTION public.log_operacoes();


--
-- Name: jogadores_escalacoes trg_log_jogadores_escalacoes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_jogadores_escalacoes AFTER INSERT OR DELETE OR UPDATE ON public.jogadores_escalacoes FOR EACH ROW EXECUTE FUNCTION public.log_operacoes();


--
-- Name: jogadores_times trg_log_jogadores_times; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_jogadores_times AFTER INSERT OR DELETE OR UPDATE ON public.jogadores_times FOR EACH ROW EXECUTE FUNCTION public.log_operacoes();


--
-- Name: partidas trg_log_partidas; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_partidas AFTER INSERT OR DELETE OR UPDATE ON public.partidas FOR EACH ROW EXECUTE FUNCTION public.log_operacoes();


--
-- Name: times trg_log_times; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_times AFTER INSERT OR DELETE OR UPDATE ON public.times FOR EACH ROW EXECUTE FUNCTION public.log_operacoes();


--
-- Name: treinadores trg_log_treinadores; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_treinadores AFTER INSERT OR DELETE OR UPDATE ON public.treinadores FOR EACH ROW EXECUTE FUNCTION public.log_operacoes();


--
-- Name: escalacoes fk_escalacoes_2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.escalacoes
    ADD CONSTRAINT fk_escalacoes_2 FOREIGN KEY (idtime) REFERENCES public.times(idtime);


--
-- Name: jogadores_escalacoes fk_jogadores_escalacoes_2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_escalacoes
    ADD CONSTRAINT fk_jogadores_escalacoes_2 FOREIGN KEY (idjogador) REFERENCES public.jogadores(idpessoa);


--
-- Name: jogadores_escalacoes fk_jogadores_escalacoes_3; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_escalacoes
    ADD CONSTRAINT fk_jogadores_escalacoes_3 FOREIGN KEY (idescalacao) REFERENCES public.escalacoes(idescalacao);


--
-- Name: jogadores_times fk_jogadores_times_1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_times
    ADD CONSTRAINT fk_jogadores_times_1 FOREIGN KEY (idjogador) REFERENCES public.jogadores(idpessoa);


--
-- Name: jogadores_times fk_jogadores_times_2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jogadores_times
    ADD CONSTRAINT fk_jogadores_times_2 FOREIGN KEY (idtime) REFERENCES public.times(idtime);


--
-- Name: partidas fk_partidas_escalacaocasa; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas
    ADD CONSTRAINT fk_partidas_escalacaocasa FOREIGN KEY (escalacaocasa) REFERENCES public.escalacoes(idescalacao);


--
-- Name: partidas fk_partidas_escalacaovisitante; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas
    ADD CONSTRAINT fk_partidas_escalacaovisitante FOREIGN KEY (escalacaovisitante) REFERENCES public.escalacoes(idescalacao);


--
-- Name: partidas fk_partidas_timecasa; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas
    ADD CONSTRAINT fk_partidas_timecasa FOREIGN KEY (timecasa) REFERENCES public.times(idtime);


--
-- Name: partidas fk_partidas_timevisitante; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partidas
    ADD CONSTRAINT fk_partidas_timevisitante FOREIGN KEY (timevisitante) REFERENCES public.times(idtime);


--
-- Name: times fk_times_2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.times
    ADD CONSTRAINT fk_times_2 FOREIGN KEY (idtreinador) REFERENCES public.treinadores(idpessoa);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;


--
-- PostgreSQL database dump complete
--

